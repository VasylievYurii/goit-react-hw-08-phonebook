{"version":3,"file":"static/js/890.c8937735.chunk.js","mappings":"0SAIaA,EAAUC,EAAAA,EAAAA,QAAH,2CAIPC,EAAYD,EAAAA,EAAAA,IAAH,qIAmCTE,GA3BQF,EAAAA,EAAAA,GAAH,sQAaWA,EAAAA,EAAAA,GAAH,kLASGA,EAAAA,EAAAA,GAAOG,EAAAA,IAAPH,CAAH,0DAKIA,EAAAA,EAAAA,GAAOI,EAAAA,IAAPJ,CAAH,yEAMdK,EAAaL,EAAAA,EAAAA,IAAH,oR,UCjDVM,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACpBC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAChBC,EAAkB,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,E,wCCcpC,EAfyBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KACHE,QACC,yHACA,0IAEDC,SAAS,oBACZC,OAAQJ,EAAAA,KACLE,QACC,+EACA,gGAEDC,SAAS,8BCXDE,GAAcrB,EAAAA,EAAAA,GAAOsB,EAAAA,GAAPtB,CAAH,6QAcXuB,EAASvB,EAAAA,EAAAA,OAAH,6cAkBNwB,EAAYxB,EAAAA,EAAAA,MAAH,iFAMTyB,GAAmBzB,EAAAA,EAAAA,GAAO0B,EAAAA,GAAP1B,CAAH,0HAMhB2B,IAAY3B,EAAAA,EAAAA,GAAO4B,EAAAA,GAAP5B,CAAH,yS,UCjChB6B,GAAgB,CACpBZ,KAAM,GACNG,OAAQ,IAoCV,GAjCsB,SAAC,GAAiB,IAAfU,EAAc,EAAdA,QACjBC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MASrB,OACE,UAAC,KAAD,CACEL,cAAeA,GACfO,iBAAkBA,EAClBC,SAXiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BC,QAAQC,IAAI,sBAAuBH,GACnCP,GAASW,EAAAA,EAAAA,IAAWJ,IACpBC,IACAT,GACD,EAGC,UAKE,WAACT,EAAD,YACE,UAACG,EAAD,CAAWmB,QAASV,EAApB,SAAiC,UACjC,UAACN,GAAD,CAAWiB,KAAK,OAAO3B,KAAK,OAAO4B,GAAIZ,EAAad,UAAQ,KAC5D,UAACM,EAAD,CAAkBR,KAAK,OAAO6B,UAAU,IAAIC,UAAU,WAEtD,UAACvB,EAAD,CAAWmB,QAASR,EAApB,SAAkC,WAClC,UAACR,GAAD,CAAWiB,KAAK,MAAM3B,KAAK,SAAS4B,GAAIV,EAAchB,UAAQ,KAC9D,UAACM,EAAD,CAAkBR,KAAK,SAAS6B,UAAU,IAAIC,UAAU,WAExD,UAACxB,EAAD,CAAQqB,KAAK,SAAb,SAAsB,oBAI7B,E,sBC9CYI,GAAchD,EAAAA,EAAAA,GAAH,4JASXiD,GAAcjD,EAAAA,EAAAA,EAAH,qhBA2BXkD,GAAclD,EAAAA,EAAAA,EAAH,wVAkBXmD,GAAenD,EAAAA,EAAAA,EAAH,wKAQZoD,IAAqBpD,EAAAA,EAAAA,GAAOqD,GAAAA,IAAPrD,CAAH,2SAiBlBsD,GAAYtD,EAAAA,EAAAA,GAAH,wCAGTuD,GAAiBvD,EAAAA,EAAAA,IAAH,0DAKdK,GAAaL,EAAAA,EAAAA,IAAH,sBAEVwD,IAAyBxD,EAAAA,EAAAA,GAAOyD,GAAAA,IAAPzD,CAAH,gJChCnC,GAjCgB,WACd,IAEM0D,EAfmB,SAAClD,EAAUmD,GACpC,GAAIA,EAAc,CAChB,IAAMC,EAAmBD,EAAaE,cAItC,OAHyBrD,EAASO,QAAO,SAAA+C,GAAO,OAC9CA,EAAQ7C,KAAK4C,cAAcE,SAASH,EADU,GAIjD,CACC,OAAOpD,CAEV,CAKyBwD,EAFPC,EAAAA,EAAAA,IAAY3D,IACR2D,EAAAA,EAAAA,IAAYnD,IAE3BiB,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAACsB,GAAD,UACGI,EAAgBQ,KAAI,SAAAJ,GACnB,IAAQjB,EAAqBiB,EAArBjB,GAAI5B,EAAiB6C,EAAjB7C,KAAMG,EAAW0C,EAAX1C,OAClB,OACE,UAAC4B,GAAD,WACE,WAACC,GAAD,CAAakB,KAAK,IAAIrC,QAAS,SAAAsC,GAAC,OAAIA,EAAEC,gBAAN,EAAhC,WACE,WAAC,GAAD,WACG,KACD,UAACb,GAAD,QAGF,WAACD,GAAD,YACE,UAACL,GAAD,UAAcjC,KACd,UAACkC,GAAD,UAAe/B,QAGjB,UAACgC,GAAD,CAAoBtB,QAAS,kBAnBpB,SAAAe,GAAE,OAAId,GAASuC,EAAAA,EAAAA,IAAczB,GAA3B,CAmBwB0B,CAAa1B,EAAnB,QAZfA,EAgBrB,KAGN,E,WCxDY2B,GAAcxE,EAAAA,EAAAA,MAAH,8DAKXyE,GAAczE,EAAAA,EAAAA,MAAH,0SAiBX0E,IAAsB1E,EAAAA,EAAAA,GAAO2E,GAAAA,IAAP3E,CAAH,gL,WCKhC,GAxBe,WACb,IAAM+B,GAAWC,EAAAA,EAAAA,MACX4C,GAAaX,EAAAA,EAAAA,IAAYnD,GAC/B,GAAwB+D,EAAAA,EAAAA,UAAQ,OAACD,QAAD,IAACA,EAAAA,EAAc,IAA/C,eAAOE,EAAP,KAAaC,EAAb,KAQA,OACE,WAACP,GAAD,YACE,UAACC,GAAD,CACE7B,KAAK,OACLoC,MAAOF,EACPG,SAXiB,SAAAb,GACrB,IAAMc,EAAUd,EAAEe,cAAcH,MAChCD,EAAQG,GACRnD,GAASqD,EAAAA,GAAAA,GAAUF,GACpB,EAQKG,YAAY,UAEd,UAACX,GAAD,MAGL,E,WC1BYY,GAAetF,EAAAA,EAAAA,IAAH,6LAWZuF,GAAcvF,EAAAA,EAAAA,IAAH,qSCTlBwF,IDuBkBxF,EAAAA,EAAAA,IAAH,kNCvBHyF,SAASC,eAAe,UAgC1C,I,eAAA,GA9BA,YAAuC,IAAtB5D,EAAqB,EAArBA,QAAS6D,EAAY,EAAZA,SAClBC,EAAgB,SAAAxB,GACL,WAAXA,EAAEyB,MACJ/D,GAEH,EAiBD,OATAgE,EAAAA,EAAAA,YAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWJ,GACnCH,SAASQ,KAAKC,MAAMC,SAAW,SACxB,WACLJ,OAAOK,oBAAoB,UAAWR,GACtCH,SAASQ,KAAKC,MAAMC,SAAW,MAChC,CACF,KAEME,EAAAA,GAAAA,eACL,UAACf,GAAD,CAAcxD,QAhBY,SAAAsC,GACtBA,EAAEe,gBAAkBf,EAAEkC,QACxBxE,GAEH,EAYC,UACE,UAACyD,GAAD,UAAcI,MAEhBH,GAEH,E,WC/BYzF,GAAUC,EAAAA,EAAAA,QAAH,6CAIPC,GAAYD,EAAAA,EAAAA,IAAH,uIAQTuG,GAAgBvG,EAAAA,EAAAA,GAAH,mMAUbE,IAAiBF,EAAAA,EAAAA,GAAOI,EAAAA,IAAPJ,CAAH,0EAMdK,GAAaL,EAAAA,EAAAA,IAAH,kOCRvB,GAdkB,SAAC,GAA2B,IAAzB8B,EAAwB,EAAxBA,QAAS6D,EAAe,EAAfA,SAC5B,OACE,UAAC,GAAD,WACE,WAAC,GAAD,YACE,WAAC,GAAD,CAAY7D,QAASA,EAArB,UACG6D,GACD,UAAC,GAAD,QAEF,UAAC,GAAD,UAAe,kCAItB,EC0CD,OA9CA,WACE,OAAkCd,EAAAA,EAAAA,WAAS,GAA3C,eAAO2B,EAAP,KAAkBC,EAAlB,KACM1E,GAAWC,EAAAA,EAAAA,MACXxB,GAAWyD,EAAAA,EAAAA,IAAY3D,GACvBK,GAAYsD,EAAAA,EAAAA,IAAYvD,GACxBG,GAAQoD,EAAAA,EAAAA,IAAYrD,IAE1BkF,EAAAA,EAAAA,YAAU,WACR/D,GAAS2E,EAAAA,EAAAA,MACV,GAAE,CAAC3E,IAEJ,IAAM4E,EAAc,WAClBF,GAAa,SAAAG,GAAS,OAAKA,CAAL,GACvB,EAED,OACE,UAAC7G,EAAD,WACE,WAACE,EAAD,WACGU,IAAcE,IAAS,UAACgG,GAAA,EAAD,IACH,IAApBrG,EAASsG,QACR,UAAC,GAAD,CAAWhF,QAAS6E,EAApB,SACGH,IACC,UAAC,GAAD,CAAO1E,QAAS6E,EAAhB,UACE,UAAC,GAAD,CAAe7E,QAAS6E,SAK9B,mCACE,UAAC,GAAD,KACA,UAAC,GAAD,KACA,WAACtG,EAAD,CAAYyB,QAAS6E,EAArB,UACGH,IACC,UAAC,GAAD,CAAO1E,QAAS6E,EAAhB,UACE,UAAC,GAAD,CAAe7E,QAAS6E,OAG5B,UAACzG,EAAD,cAOb,C","sources":["pages/Contacts/Contacts.styled.js","redux/contacts/selectors.js","js/validationSchema.js","components/FormPhonebook/FormPhonebook.styled.js","components/FormPhonebook/FormPhonebook.jsx","components/ContactCard/ContactCard.styled.js","components/ContactCard/ContactCard.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/EmptyData/EmptyData.styled.js","components/EmptyData/EmptyData.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { DiPhonegap } from 'react-icons/di';\nimport { BsPersonAdd } from 'react-icons/bs';\n\nexport const Section = styled.section`\n  margin: 0 auto;\n`;\n\nexport const Container = styled.div`\n  max-width: 375px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  width: auto;\n  text-transform: uppercase;\n  width: 100%;\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n  text-align: center;\n  border-bottom: 2px solid white;\n`;\n\nexport const TitleContacts = styled.h2`\n  width: 100%;\n  text-align: center;\n  border-bottom: 2px solid white;\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n  text-transform: uppercase;\n`;\n\nexport const DiPhonegapSvg = styled(DiPhonegap)`\n  width: 40px;\n  height: 40px;\n`;\n\nexport const BsPersonAddSvg = styled(BsPersonAdd)`\n  width: 40px;\n  height: 40px;\n  fill: #fff;\n`;\n\nexport const SvgWrapper = styled.div`\n  position: fixed;\n  bottom: 4%;\n  right: 3%;\n  background-color: #42e8e0;\n  padding: 10px;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: box-shadow 250ms var(--timing-function);\n  :hover {\n    box-shadow: #42e8e0 0px 0px 30px;\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getStatusFilter = state => state.filter;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Name is required'),\n  number: Yup.string()\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Phone number is required'),\n});\n\nexport default validationSchema;\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  font-size: 14px;\n  padding: 1em;\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 760px) {\n    font-size: 24px;\n    min-width: 300px;\n  }\n  @media screen and (min-width: 1280px) {\n    min-width: 400px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  font-family: inherit;\n  font-size: inherit;\n  background-color: #34398b;\n  border-radius: 28px;\n  border: #42e7e0 2px solid;\n  color: #fff;\n  padding: 5px 20px 10px 20px;\n  cursor: pointer;\n  transition: background-color 500ms var(--timing-function),\n    font-weight 300ms var(--timing-function), color 300ms var(--timing-function);\n  &:hover {\n    color: #11074e;\n    background-color: #42e7e0;\n  }\n`;\n\nexport const LabelForm = styled.label`\n  font-size: 1em;\n  font-weight: 300;\n  color: white;\n`;\n\nexport const ErrorMessageForm = styled(ErrorMessage)`\n  font-family: 'Arial', sans-serif;\n  font-size: 0.6em;\n  margin-bottom: 1.4em;\n  color: red;\n`;\nexport const FieldForm = styled(Field)`\n  width: 100%;\n  border: none;\n  border-radius: 4px;\n  margin: 8px 0;\n  margin-bottom: 14px;\n  outline: none;\n  padding: 8px;\n  box-sizing: border-box;\n  transition: 0.3s;\n  padding-right: 30px;\n  &:focus {\n    box-shadow: 0 0 8px 0 var(--color-contacts);\n  }\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport validationSchema from '../../js/validationSchema';\nimport {\n  FormWrapper,\n  Button,\n  LabelForm,\n  ErrorMessageForm,\n  FieldForm,\n} from './FormPhonebook.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst FormPhonebook = ({ onClick }) => {\n  const dispatch = useDispatch();\n  const inputNameId = nanoid();\n  const inputPhoneId = nanoid();\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log('add contact values:', values);\n    dispatch(addContact(values));\n    resetForm();\n    onClick();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormWrapper>\n        <LabelForm htmlFor={inputNameId}>Name</LabelForm>\n        <FieldForm type=\"text\" name=\"name\" id={inputNameId} required />\n        <ErrorMessageForm name=\"name\" component=\"p\" className=\"error\" />\n\n        <LabelForm htmlFor={inputPhoneId}>Phone</LabelForm>\n        <FieldForm type=\"tel\" name=\"number\" id={inputPhoneId} required />\n        <ErrorMessageForm name=\"number\" component=\"p\" className=\"error\" />\n\n        <Button type=\"submit\">Add contact</Button>\n      </FormWrapper>\n    </Formik>\n  );\n};\n\nexport default FormPhonebook;\n","import styled from '@emotion/styled';\nimport { RxCrossCircled } from 'react-icons/rx';\nimport { AiOutlinePhone } from 'react-icons/ai';\n\nexport const ContactList = styled.li`\n  display: block;\n  font-size: 1em;\n  padding-left: 1em;\n  padding-right: 1em;\n  padding-top: 0.3em;\n  padding-bottom: 0.3em;\n`;\n\nexport const ContactCard = styled.a`\n  position: relative;\n  display: flex;\n  padding: 0.4em;\n  border-radius: 40px;\n  border-top-right-radius: 5px;\n  background-color: #3686a8;\n  box-shadow: auto;\n  transition: background-color 250ms var(--timing-function),\n    box-shadow 250ms var(--timing-function);\n\n  &:hover {\n    background-color: #35ebe4;\n    box-shadow: 0 0px 5px rgba(0, 0, 0, 0.3);\n  }\n\n  &:link,\n  &:visited {\n    text-decoration: none;\n  }\n\n  &:link:hover,\n  &:visited:hover {\n    text-decoration: none;\n  }\n`;\n\nexport const ContactName = styled.p`\n  position: relative;\n  font-family: 'Arial';\n  color: var(--color-main-one);\n  font-size: 1.2em;\n  font-weight: 500;\n  :after {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 0%;\n    display: block;\n    width: 100%;\n    height: 1px;\n    background-color: rgba(255, 255, 255, 20%);\n  }\n`;\n\nexport const ContactPhone = styled.p`\n  font-family: 'Arial';\n  color: var(--color-main-one);\n  font-size: 1.2em;\n  font-weight: 500;\n  text-align: right;\n  margin-left: auto;\n`;\nexport const RiDeleteBinLineSvg = styled(RxCrossCircled)`\n  position: absolute;\n  color: white;\n  right: 0.2em;\n  top: 0.2em;\n  background-color: inherit;\n  border-radius: 50%;\n  border: 3px solid inherit;\n  width: 20px;\n  height: 20px;\n  transition: color 250ms var(--timing-function);\n\n  :hover {\n    color: red;\n  }\n`;\n\nexport const ContactUl = styled.ul`\n  width: 100%;\n`;\nexport const ContactWrapper = styled.div`\n  width: 100%;\n  padding: 10px;\n`;\n\nexport const SvgWrapper = styled.div``;\n\nexport const BsFillTelephoneFillSvg = styled(AiOutlinePhone)`\n  fill: white;\n  background-color: #42e8e0;\n  padding: 10px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getStatusFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  ContactList,\n  ContactCard,\n  ContactName,\n  ContactPhone,\n  RiDeleteBinLineSvg,\n  ContactUl,\n  BsFillTelephoneFillSvg,\n  ContactWrapper,\n  SvgWrapper,\n} from './ContactCard.styled';\n\nconst getVisibleContacts = (contacts, statusFilter) => {\n  if (statusFilter) {\n    const normalizedFilter = statusFilter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return filteredContacts;\n  } else {\n    return contacts;\n  }\n};\n\nconst Contact = () => {\n  const contacts = useSelector(getContacts);\n  const statusFilter = useSelector(getStatusFilter);\n  const visibleContacts = getVisibleContacts(contacts, statusFilter);\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ContactUl>\n      {visibleContacts.map(contact => {\n        const { id, name, number } = contact;\n        return (\n          <ContactList key={id}>\n            <ContactCard href=\"#\" onClick={e => e.preventDefault()}>\n              <SvgWrapper>\n                {' '}\n                <BsFillTelephoneFillSvg />\n              </SvgWrapper>\n\n              <ContactWrapper>\n                <ContactName>{name}</ContactName>\n                <ContactPhone>{number}</ContactPhone>\n              </ContactWrapper>\n\n              <RiDeleteBinLineSvg onClick={() => handleDelete(id)} />\n            </ContactCard>\n          </ContactList>\n        );\n      })}\n    </ContactUl>\n  );\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\nimport { RiUserSearchLine } from 'react-icons/ri';\n\nexport const FilterLabel = styled.label`\n  position: relative;\n  width: 80%;\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  border: none;\n  border-radius: 4px;\n  margin: 8px 0;\n  margin-bottom: 4px;\n  outline: none;\n  padding: 8px;\n  box-sizing: border-box;\n  transition: 0.3s;\n  padding-right: 30px;\n\n  &:focus {\n    box-shadow: 0 0 8px 0 var(--color-contacts);\n  }\n`;\n\nexport const RiUserSearchLineSvg = styled(RiUserSearchLine)`\n  position: absolute;\n  fill: var(--color-main-one);\n  top: 55%;\n  left: 95%;\n  width: 20px;\n  height: 20px;\n  transform: translate(-50%, -50%);\n`;\n","import React, { useState } from 'react';\nimport { FilterLabel, FilterInput, RiUserSearchLineSvg } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { getStatusFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const localStore = useSelector(getStatusFilter);\n  const [text, setText] = useState(localStore ?? '');\n\n  const handleOnChange = e => {\n    const newText = e.currentTarget.value;\n    setText(newText);\n    dispatch(setFilter(newText));\n  };\n\n  return (\n    <FilterLabel>\n      <FilterInput\n        type=\"text\"\n        value={text}\n        onChange={handleOnChange}\n        placeholder=\"Name\"\n      />\n      <RiUserSearchLineSvg />\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(8px);\n  z-index: 1;\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  width: 90%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.25);\n  background-color: #10064d;\n  border-radius: 20px;\n  @media screen and (min-width: 768px) {\n    width: auto;\n  }\n`;\n\nexport const ModalImg = styled.img`\n  width: 100%;\n  filter: none;\n\n  @media screen and (min-width: 768px) {\n    width: auto;\n    height: 60vh;\n  }\n  @media screen and (min-width: 1200px) {\n    height: 80vh;\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalOverlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.getElementById('modal');\n\nfunction Modal({ onClick, children }) {\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClick();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget !== e.target) {\n      onClick();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'auto';\n    };\n  });\n\n  return createPortal(\n    <ModalOverlay onClick={handleBackdropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </ModalOverlay>,\n    modalRoot\n  );\n}\n\nexport default Modal;\n","import styled from '@emotion/styled';\nimport { BsPersonAdd } from 'react-icons/bs';\n\nexport const Section = styled.section`\n  margin: 0 auto;\n`;\n\nexport const Container = styled.div`\n  max-width: 375px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nexport const TitleContacts = styled.h2`\n  color: #fff;\n  width: 100%;\n  text-align: center;\n  border-bottom: 2px solid white;\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n  text-transform: uppercase;\n`;\n\nexport const BsPersonAddSvg = styled(BsPersonAdd)`\n  width: 40px;\n  height: 40px;\n  fill: #fff;\n`;\n\nexport const SvgWrapper = styled.div`\n  border: #fff 2px solid;\n  padding: 10px;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: box-shadow 250ms var(--timing-function);\n  :hover {\n    box-shadow: #42e8e0 0px 0px 30px;\n  }\n`;\n","import React from 'react';\nimport {\n  Section,\n  Container,\n  SvgWrapper,\n  BsPersonAddSvg,\n  TitleContacts,\n} from './EmptyData.styled';\n\nconst EmptyData = ({ onClick, children }) => {\n  return (\n    <Section>\n      <Container>\n        <SvgWrapper onClick={onClick}>\n          {children}\n          <BsPersonAddSvg />\n        </SvgWrapper>\n        <TitleContacts>You have no contacts yet!</TitleContacts>\n      </Container>\n    </Section>\n  );\n};\n\nexport default EmptyData;\n","import { useState, useEffect } from 'react';\nimport {\n  Section,\n  Container,\n  BsPersonAddSvg,\n  SvgWrapper,\n} from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getIsLoading, getError } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport FormPhonebook from 'components/FormPhonebook';\nimport Contact from 'components/ContactCard/ContactCard';\nimport Filter from 'components/Filter';\nimport Modal from 'components/Modal/Modal';\nimport Loader from 'components/Loader/Loader';\nimport EmptyData from 'components/EmptyData/EmptyData';\n\nfunction Contacts() {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const toggleModal = () => {\n    setShowModal(prevState => !prevState);\n  };\n\n  return (\n    <Section>\n      <Container>\n        {isLoading && !error && <Loader />}\n        {contacts.length === 0 ? (\n          <EmptyData onClick={toggleModal}>\n            {showModal && (\n              <Modal onClick={toggleModal}>\n                <FormPhonebook onClick={toggleModal} />\n              </Modal>\n            )}\n          </EmptyData>\n        ) : (\n          <>\n            <Filter />\n            <Contact />\n            <SvgWrapper onClick={toggleModal}>\n              {showModal && (\n                <Modal onClick={toggleModal}>\n                  <FormPhonebook onClick={toggleModal} />\n                </Modal>\n              )}\n              <BsPersonAddSvg />\n            </SvgWrapper>\n          </>\n        )}\n      </Container>\n    </Section>\n  );\n}\n\nexport default Contacts;\n"],"names":["Section","styled","Container","BsPersonAddSvg","DiPhonegap","BsPersonAdd","SvgWrapper","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getStatusFilter","filter","Yup","name","matches","required","number","FormWrapper","Form","Button","LabelForm","ErrorMessageForm","ErrorMessage","FieldForm","Field","initialValues","onClick","dispatch","useDispatch","inputNameId","nanoid","inputPhoneId","validationSchema","onSubmit","values","resetForm","console","log","addContact","htmlFor","type","id","component","className","ContactList","ContactCard","ContactName","ContactPhone","RiDeleteBinLineSvg","RxCrossCircled","ContactUl","ContactWrapper","BsFillTelephoneFillSvg","AiOutlinePhone","visibleContacts","statusFilter","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","useSelector","map","href","e","preventDefault","deleteContact","handleDelete","FilterLabel","FilterInput","RiUserSearchLineSvg","RiUserSearchLine","localStore","useState","text","setText","value","onChange","newText","currentTarget","setFilter","placeholder","ModalOverlay","ModalWindow","modalRoot","document","getElementById","children","handleKeyDown","code","useEffect","window","addEventListener","body","style","overflow","removeEventListener","createPortal","target","TitleContacts","showModal","setShowModal","fetchContacts","toggleModal","prevState","Loader","length"],"sourceRoot":""}