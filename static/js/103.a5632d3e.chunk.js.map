{"version":3,"file":"static/js/103.a5632d3e.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","useIsomorphicLayoutEffect","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","frame","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","push","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","parseCSSVariable","exec","getVariableValue","fallback","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}